#!/usr/bin/env ruby 
# test

require 'erb'
require 'json'

BUILD_DIR = ARGV[0]
CACHE_DIR = ARGV[1]
DEPS_DIR = ARGV[2]
DEPS_IDX = ARGV[3]

STDOUT.sync = true
puts "-----> CF Envoy Proxy Buildpack"

VCAP_SERVICES = JSON.parse(ENV["VCAP_SERVICES"])
VCAP_APPLICATION = JSON.parse(ENV["VCAP_APPLICATION"])

puts "Build dir is " + BUILD_DIR
def directory_tree(path)
  data = { name: File.basename(path) }
  data[:children] = []
  Dir.foreach(path) do |entry|
    next if entry == '.' || entry == '..' || entry == 'node_modules'
    full_path = File.join(path, entry)
    if File.directory?(full_path)
      data[:children] << directory_tree(full_path)
    else
      data[:children] << entry
    end
  end
  data
end

# Get the starting directory path
root_dir = BUILD_DIR

# Build the directory tree hash
tree = directory_tree(root_dir)

# Print the tree structure (you can implement your own printing logic)
def print_tree(data, level = 0)
    puts "-" * level + ">" + data[:name]
    data[:children].each do |child|
      if child.is_a?(Hash)
        print_tree(child, level + 2)
      else
        puts "|" + "---" * (level + 2) + child.to_s
      end
    end
  end
print_tree(tree)
template = ERB.new(File.read(File.join(BUILD_DIR, "envoy.yaml.erb")), trim_mode: "-")
config = template.result(binding)
File.write(File.join(DEPS_DIR, DEPS_IDX, "envoy.yaml"), config)

LAUNCH = %Q(---
processes:
- type: "sidecar-envoy"
  command: "/etc/cf-assets/envoy/envoy -c /home/vcap/deps/#{DEPS_IDX}/envoy.yaml --log-level warn --base-id 1"
  platforms:
    cloudfoundry:
      sidecar_for: ["web"]
)

File.write(File.join(DEPS_DIR, DEPS_IDX, "launch.yml"), LAUNCH)
